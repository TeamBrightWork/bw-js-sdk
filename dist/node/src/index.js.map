{"version":3,"sources":["../../../src/index.js"],"names":["BrightWork","apiKey","appName","apiURL","appURL","timeout","models","request","create","baseURL","headers","max","backoff","attempt","console","log","get","then","res","initModels","data","window","bw","global","catch","err","error","settings","forEach","model","name","collections","sdk","init"],"mappings":"AAAA;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;AAEA;;;;IAIMA,U;;;;;;;;;AAsCF;;;;;;;;6BAQKC,M,EAAQC,O,EAASC,M,EAAQC,M,EAAQC,O,EAAS;AAAA;;AAC3C,iBAAKC,MAAL,GAAc,EAAd;AACA,iBAAKL,MAAL,GAAcA,MAAd;AACA,iBAAKC,OAAL,GAAeA,OAAf;AACA,iBAAKC,MAAL,GAAcA,UAAU,0BAAxB;AACA,iBAAKC,MAAL,GAAcA,sBAAoB,KAAKF,OAAzB,eAAd;AACA,iBAAKG,OAAL,GAAeA,WAAW,IAA1B;;AAEA;AACA,gBAAIE,UAAU,gBAAMC,MAAN,CAAa;AACvBC,yBAAS,KAAKN,MADS;AAEvBE,yBAAS,KAAKA,OAFS;AAGvBK,yBAAS;AACL,oCAAgB,kBADX;AAEL,8BAAUT;AAFL;AAHc,aAAb,CAAd;;AASA,mBAAO,4BAAM,EAAEU,KAAK,CAAP,EAAUC,SAAS,IAAnB,EAAN,EAAiC,UAACC,OAAD,EAAa;AAC7CC,wBAAQC,GAAR,CAAY,4BAAZ,EAA0CF,OAA1C;AACA,uBAAON,QAAQS,GAAR,CAAY,eAAZ,EACFC,IADE,CACG,UAACC,GAAD,EAAS;AACXJ,4BAAQC,GAAR,CAAY,oBAAZ;AACA,0BAAKI,UAAL,CAAgBD,IAAIE,IAApB;;AAEA,wBAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,+BAAOC,EAAP;AACH,qBAFD,MAEO;AACHC,+BAAOD,EAAP;AACH;;AAED;AACH,iBAZE,CAAP;AAaP,aAfM,EAgBNE,KAhBM,CAgBA,UAACC,GAAD,EAAS;AACZX,wBAAQY,KAAR,CAAc,yCAAd;AACAZ,wBAAQY,KAAR,CAAcD,GAAd;AACA,uBAAO,IAAP;AACH,aApBM,CAAP;AAqBH;;;mCAEUE,Q,EAAU;AAAA;;AACjBA,qBAASrB,MAAT,CAAgBsB,OAAhB,CAAwB,UAACC,KAAD,EAAW;AAChC,uBAAKvB,MAAL,CAAYuB,MAAMC,IAAlB,IAA0B,yBAAe,OAAK7B,MAApB,EAA4B,OAAKG,MAAjC,EAAyCyB,MAAMC,IAA/C,EAAqDD,MAAME,WAA3D,EAAwE,OAAK1B,OAA7E,CAA1B;AACF,aAFD;AAGH;;;;;AAzFD;;;;;;;;;;;;;;mCAckBJ,M,EAAQC,O,EAASC,M,EAAQC,M,EAAQC,O,EAAS;AACxD,gBAAI2B,MAAM,IAAIhC,UAAJ,EAAV;AACA,mBAAOgC,IAAIC,IAAJ,CAAShC,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,MAAlC,EAA0CC,OAA1C,CAAP;AACH;;AAED;;;;;;;;;;;;;;;;gCAae;AACX,mBAAO,qBAAP;AACH;;;;;;AAwDJ;;AAED,IAAI,OAAOgB,MAAP,KAAkB,WAAtB,EAAmC;AAC/BA,WAAOrB,UAAP,GAAoBA,UAApB;AACH,CAFD,MAEO;AACHuB,WAAOvB,UAAP,GAAoBA,UAApB;AACH","file":"index.js","sourcesContent":["'use strict';\n\nimport Repository from'./repository';\nimport Query from'./query';\nimport axios from 'axios';\nimport retry from 'retry-promise';\n\n/**\n * @class BrightWork\n * @classdesc The BrightWork Javascript SDK\n */\nclass BrightWork {\n\n    /**\n     * Initialize the BrightWork Javascript SDK and connect it to your app\n     * @param apiKey the api key assigned to your app\n     * @param appName the name of your app as defined in the manifest\n     * @param apiURL (optional) the BrightWork API URL\n     * @param appURL (optional) the URL to your APP\n     * @example <caption>Initialize the BrightWork JavaScript SDK to work with your app.</caption>\n     *\n     * BrightWork.initialize('YOUR_API_KEY', 'YOUR_APP_NAME').then(function(){\n     *      console.log('initialized you can now access the SDK via window.bw global variable');\n     * });\n     *\n     * @returns {Promise|*}\n     */\n    static initialize(apiKey, appName, apiURL, appURL, timeout) {\n        var sdk = new BrightWork();\n        return sdk.init(apiKey, appName, apiURL, appURL, timeout);\n    }\n\n    /**\n     * Create a new query for filtering *.models.model.find\n     * @example <caption>All the photo albums where name contains 'Photo' sorted by name ascending.</caption>\n     * var query = BrightWork.Query().contains('name', 'Photo').ascending('name');\n     *\n     * console.log('searching for all albums named \"*Photo*\"...');\n     * bw.models.album.find(query).then(function(albums) {\n     *   console.log('...results', albums);\n     * });\n     *\n     * @returns {Query}\n     * @see {Repository#find}\n     */\n    static query() {\n        return new Query();\n    }\n\n    /** The internal initialize method\n     * @private\n     * @param apiKey\n     * @param appName\n     * @param apiURL\n     * @param appURL\n     * @returns {*}\n     */\n    init(apiKey, appName, apiURL, appURL, timeout) {\n        this.models = {};\n        this.apiKey = apiKey;\n        this.appName = appName;\n        this.apiURL = apiURL || 'http://api.brightwork.io';\n        this.appURL = appURL || `http://${this.appName}.bwapps.io`;\n        this.timeout = timeout || 6000;\n\n        // call home and get settings & models\n        var request = axios.create({\n            baseURL: this.apiURL,\n            timeout: this.timeout,\n            headers: {\n                'Content-Type': 'application/json',\n                'apiKey': apiKey\n            }\n        });\n\n        return retry({ max: 2, backoff: 1000 }, (attempt) => {\n                console.log('initializing BrightWork...', attempt);\n                return request.get('/app/settings')\n                    .then((res) => {\n                        console.log('settings loaded...');\n                        this.initModels(res.data);\n\n                        if (typeof window !== 'undefined') {\n                            window.bw = this;\n                        } else {\n                            global.bw = this;\n                        }\n\n                        return this;\n                    });\n        })\n        .catch((err) => {\n            console.error('Unable to initialize the BrightWork SDK');\n            console.error(err);\n            return null;\n        });\n    }\n\n    initModels(settings) {\n        settings.models.forEach((model) => {\n           this.models[model.name] = new Repository(this.apiKey, this.appURL, model.name, model.collections, this.timeout);\n        });\n    }\n};\n\nif (typeof window !== 'undefined') {\n    window.BrightWork = BrightWork;\n} else {\n    global.BrightWork = BrightWork;\n}"]}